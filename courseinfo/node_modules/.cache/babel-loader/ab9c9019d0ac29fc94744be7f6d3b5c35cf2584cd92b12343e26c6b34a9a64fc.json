{"ast":null,"code":"var _jsxFileName = \"/Users/carsonhaskell/Desktop/Projects/full-stack-open/submissions/part-1/courseinfo/src/Content.jsx\";\nimport React from \"react\";\nimport Part from \"./Part\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Content = _ref => {\n  let {\n    part1,\n    part2,\n    part3\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: part1.name,\n      exercise: part1.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: part2.name,\n      exercise: part2.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: part3.name,\n      exercise: part3.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","Part","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","_ref","part1","part2","part3","children","part","name","exercise","exercises","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carsonhaskell/Desktop/Projects/full-stack-open/submissions/part-1/courseinfo/src/Content.jsx"],"sourcesContent":["import React from \"react\";\nimport Part from \"./Part\";\n\nconst Content = ({ part1, part2, part3 }) => {\n  return (\n    <>\n      <Part part={part1.name} exercise={part1.exercises} />\n      <Part part={part2.name} exercise={part2.exercises} />\n      <Part part={part3.name} exercise={part3.exercises} />\n    </>\n  );\n};\n\nexport default Content;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACtC,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACF,IAAI;MAACW,IAAI,EAAEJ,KAAK,CAACK,IAAK;MAACC,QAAQ,EAAEN,KAAK,CAACO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDhB,OAAA,CAACF,IAAI;MAACW,IAAI,EAAEH,KAAK,CAACI,IAAK;MAACC,QAAQ,EAAEL,KAAK,CAACM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDhB,OAAA,CAACF,IAAI;MAACW,IAAI,EAAEF,KAAK,CAACG,IAAK;MAACC,QAAQ,EAAEJ,KAAK,CAACK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACrD,CAAC;AAEP,CAAC;AAACC,EAAA,GARId,OAAO;AAUb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}